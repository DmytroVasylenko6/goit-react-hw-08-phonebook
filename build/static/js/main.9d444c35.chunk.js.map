{"version":3,"sources":["components/Section/Section.module.css","components/ContactsList/ContactsList.module.css","components/Button/Button.module.css","components/Notification/Notification.module.css","components/Input/Input.module.css","components/Form/Form.module.css","fadeNotification.module.css","components/Container/Container.module.css","fadeFindContacts.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","components/Button/Button.js","components/ContactsList/ContsctsList.js","components/Input/Input.js","components/Notification/Notification.js","components/Form/Form.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","contactsParse","createAction","contactAdd","name","number","payload","id","shortid","generate","contactDelete","contactFilter","itemsReducer","createReducer","actions","state","filter","contact","filterReducer","_","contactsReducer","combineReducers","items","store","configureStore","reducer","contacts","devTools","process","Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","CSSTransition","in","timeout","classNames","unmountOnExit","join","Button","text","listener","type","color","blueColor","redColor","button","push","onClick","getVisibleContacts","allContacts","normalizeFilter","toLowerCase","includes","connect","dispatch","onDeleteContact","contactsAction","TransitionGroup","component","list","map","item","contactName","Input","label","value","placeholder","onChange","pattern","htmlFor","input","Notification","notification","Form","messsage","alert","inputNameId","inputNumberId","handleInputChange","event","currentTarget","setState","handleAddContact","e","preventDefault","handleSubmitForm","reset","props","some","visibleMessage","onAddContacts","stringMessage","message","setTimeout","this","fadeNotification","onSubmit","form","Component","newContacts","Container","container","App","inputFindId","handleFindChange","filterValue","onFilterContacts","localStorage","getItem","parseContacts","JSON","parse","onParseContacts","prevProps","prevState","setItem","stringify","length","fadeFindContacts","display","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d444c35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__12Cal\",\"titlePhonebook\":\"Section_titlePhonebook__31GGf\",\"titleContacts\":\"Section_titleContacts__3pc1O\",\"appear\":\"Section_appear__310yr\",\"appearActive\":\"Section_appearActive__3s194\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__wjHof\",\"item\":\"ContactsList_item__1D-jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__OG92j\",\"blueColor\":\"Button_blueColor__2SZa3\",\"redColor\":\"Button_redColor__2R2Qb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3DrH1\",\"blueColor\":\"Notification_blueColor__3UZLL\",\"redColor\":\"Notification_redColor__kl5hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__Bkecq\",\"input\":\"Input_input__SzuJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__DLOEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__2QokB\",\"enterActive\":\"fadeNotification_enterActive__2NPjd\",\"exit\":\"fadeNotification_exit__ZenUd\",\"exitActive\":\"fadeNotification_exitActive__2w3Le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3sTgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFindContacts_enter__2vTpq\",\"enterActive\":\"fadeFindContacts_enterActive__2Rik-\",\"exit\":\"fadeFindContacts_exit__2djZ-\",\"exitActive\":\"fadeFindContacts_exitActive__221Kp\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\n\r\nexport const contactsParse = createAction('contacts/parse');\r\n\r\n\r\nexport const contactAdd = createAction('contacts/add', ({ name, number }) => ({\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number\r\n        }\r\n}));\r\n\r\nexport const contactDelete = createAction( 'contacts/filter');\r\n\r\nexport const contactFilter = createAction('contacts/delete');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\n\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [actions.contactsParse]: (state, {payload}) => [...state, ...payload],\r\n    [actions.contactAdd]: (state, {payload}) => [...state, payload],\r\n    [actions.contactDelete]: (state, {payload}) => state.filter(contact => contact.id !== payload),\r\n})\r\n\r\n\r\nconst filterReducer = createReducer('', {\r\n    [actions.contactFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst contactsReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default contactsReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n         contacts: contactsReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport default store","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  return (\n    <section className={s.section}>\n      <CSSTransition in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\nimport classNames from 'classnames';\n\nexport default function Button({ text, listener, type, color }) {\n  const blueColor = s.blueColor;\n  const redColor = s.redColor;\n\n  const style = [s.button];\n\n  if (color === 'red') {\n    style.push(redColor);\n  }\n\n  if (color === 'blue') {\n    style.push(blueColor);\n  }\n\n  return (\n    <button\n      className={classNames(style.join(' '))}\n      type={type}\n      onClick={listener}\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  listener: PropTypes.func,\n  type: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\nimport './fade.css'\nimport Button from '../Button/Button';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport * as contactsAction from '../../redux/contacts/contacts-actions'\n\n const ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        \n        {contacts.map(({ name, number, id }) => {\n          return (\n            <CSSTransition key={id} timeout={250} classNames=\"e-fade\" appear={true}>\n            <li id={id}  className={s.item}>\n              <p>\n                <span className={s.contactName}>{name}</span> <span>{number}</span> \n              </p>\n              <Button\n                text={'Delete'}\n                listener={() => onDeleteContact(id)}\n                color=\"red\"\n              />\n              </li>\n              </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </>\n  );\n }\n\n\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n  contacts: getVisibleContacts(items, filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\nonDeleteContact: (id) => {dispatch(contactsAction.contactDelete(id))}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n};\n\nexport default Input;\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Notification({ text, color }) {\r\n  const blueColor = s.blueColor;\r\n  const redColor = s.redColor;\r\n\r\n  const style = [s.notification];\r\n\r\n  if (color === 'red') {\r\n    style.push(redColor);\r\n  }\r\n\r\n  if (color === 'blue') {\r\n    style.push(blueColor);\r\n  }\r\n\r\n  return (\r\n    <p className={classNames(style.join(' '))}>\r\n      {text}\r\n    </p>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport s from './Form.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeNotification from '../../fadeNotification.module.css';\nimport Notification from '../Notification';\nimport { connect } from 'react-redux';\nimport * as contactsAction from '../../redux/contacts/contacts-actions'\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n    messsage: '',\n    alert: null\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleAddContact = e => {\n    e.preventDefault();\n    this.handleSubmitForm(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  handleSubmitForm = (name, number) => {\n \n    if (name === '') {\n      this.visibleMessage('Please enter contact name!');\n      return;\n    };\n    if (number === '') {\n      this.visibleMessage('Please enter contact phone number!');\n      return;\n    };\n    \n    const hasContact = this.props.contacts.some(\n      contact => contact.name === name,\n    );\n\n    if (hasContact) {\n      this.visibleMessage(`${name} is already in contacts!`);\n    } else {\n      this.props.onAddContacts({name, number});\n    };\n  };\n  \n  \n  visibleMessage = (stringMessage) => {\n        this.setState({ message: stringMessage, alert: true })\n      setTimeout(() => {\n        this.setState({ alert: false })\n      }, 3000)\n  }\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number, message, alert } = this.state;\n\n    return ( <>\n      <CSSTransition in={alert} timeout={1000} classNames={fadeNotification} unmountOnExit>\n        <Notification text={message} color=\"red\"/>\n      </CSSTransition>\n      <form onSubmit={this.handleAddContact} className={s.form}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={this.inputNameId}\n          placeholder=\"Enter name...\"\n          onChange={this.handleInputChange}\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={this.inputNumberId}\n          placeholder=\"+380990101010\"\n          onChange={this.handleInputChange}\n          pattern=\"^\\+?[0-9]{10,15}$\"\n        />\n\n        <Button text={'Add contact'} type={'submit'} color={'blue'} />\n      </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n  })\n\nconst mapDispatchToProps = dispatch => ({\n onAddContacts: (newContacts) => { dispatch(contactsAction.contactAdd(newContacts)) },\n})\n\nexport default connect(mapStateToProps , mapDispatchToProps)(Form);\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport ContactsList from './components/ContactsList/ContsctsList';\nimport Form from './components/Form/Form';\nimport shortid from 'shortid';\nimport Input from './components/Input/Input';\nimport Container from './components/Container/Container';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeFindContacts from './fadeFindContacts.module.css';\nimport * as contactsAction from './redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    messsage: '',\n    alert: null\n  };\n\n   componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n      \n      if (parseContacts) {\n        this.props.onParseContacts(parseContacts);\n      }\n  };\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.contacts !== prevProps.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.props.contacts))\n    }\n  }\n\n  inputFindId = shortid.generate();\n\n  handleFindChange = event => {\n    const filterValue = event.currentTarget;\n    this.props.onFilterContacts(filterValue.value);\n  };\n\n  render() {\n    \n    const { contacts, filter } = this.props;\n\n  \n    return (\n      <>\n        <Section title=\"PhoneBook\" appear={true} styles=\"phonebook\">\n          <Form/>\n        </Section>\n    \n        <Section title=\"Contacts\" >\n          \n           \n          <CSSTransition in={contacts.length > 1} timeout={250} classNames={fadeFindContacts} unmountOnExit>\n            <Container>\n              <Input\n                label=\"Find contacts by name\"\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                id={this.inputFindId}\n                placeholder=\"Find...\"\n                onChange={this.handleFindChange}\n              />\n              </Container>\n            </CSSTransition>\n          \n\n          {contacts.length === 0 ? (\n            <span style={{ display: 'block', textAlign: 'center' }}>\n              No contacts\n            </span>\n          ) : (\n            <ContactsList\n              contacts={contacts}\n            />\n           )} \n        </Section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n    filter: state.contacts.filter\n  })\n\n    const mapDispatchToProps = (dispatch) => ({\n      onParseContacts: (contacts) => { dispatch(contactsAction.contactsParse(contacts)) },\n      onFilterContacts: (filter) => {dispatch(contactsAction.contactFilter(filter))}\n    })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}